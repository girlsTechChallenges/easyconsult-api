# Application base configuration
spring.banner.location=classpath:banner.txt
spring.application.name=easyconsult
server.port=8081

# Default active profile
spring.profiles.active=prod

# GraphQL
spring.graphql.schema.locations=classpath:graphql/

# JWT - Secret key (replace in production)
jwt.secret=change_this_with_a_long_secure_secret_key_please_change_it_to_a_random_value_which_is_at_least_32_bytes

# Resilience4j example configuration for circuit-breakers, retries and bulkheads
resilience4j.circuitbreaker.instances.saveService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.saveService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.saveService.slidingWindowSize=50
resilience4j.circuitbreaker.instances.saveService.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.saveService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.saveService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.saveService.permittedNumberOfCallsInHalfOpenState=5

resilience4j.retry.instances.saveService.maxAttempts=3
resilience4j.retry.instances.saveService.waitDuration=500ms

resilience4j.bulkhead.configs.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.saveService.maxConcurrentCalls=10

resilience4j.circuitbreaker.instances.findService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.findService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.findService.slidingWindowSize=100
resilience4j.circuitbreaker.instances.findService.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.findService.failureRateThreshold=60
resilience4j.circuitbreaker.instances.findService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.findService.permittedNumberOfCallsInHalfOpenState=10

resilience4j.retry.instances.findService.maxAttempts=2
resilience4j.retry.instances.findService.waitDuration=200ms

resilience4j.bulkhead.instances.findService.maxConcurrentCalls=20
